<Application x:Class="XStart2._0.App" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:con="clr-namespace:XStart2._0.Converters" 
             xmlns:bean="clr-namespace:XStart2._0.Bean" 
             StartupUri="MainWindow.xaml" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             d1p1:Ignorable="d" 
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources\GlassButton.xaml"></ResourceDictionary>
                <ResourceDictionary Source="Resources\SliderButton.xaml"></ResourceDictionary>
                <ResourceDictionary Source="Resources\ImageButton.xaml"></ResourceDictionary>
                <ResourceDictionary Source="Resources\ScrollViewer.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <FontFamily x:Key="FontAwesomeSolid">pack://application:,,,/Resources/Fonts/#Font Awesome 6 Free Solid</FontFamily>
            <FontFamily x:Key="FontAwesomeRegular">pack://application:,,,/Resources/Fonts/#Font Awesome 6 Free Regular</FontFamily>
            <FontFamily x:Key="FontAwesomeBrands">pack://application:,,,/Resources/Fonts/#Font Awesome 6 Brands Regular</FontFamily>
            <FontFamily x:Key="FontAwesome4">pack://application:,,,/Resources/Fonts/#FontAwesome</FontFamily>
            <con:Boolean2MainHeadShowConverter x:Key="Boolean2MainHeadShowConverter" />
            <con:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <con:Boolean2CollapsedConverter x:Key="Boolean2CollapsedConverter"/>
            <con:Boolean2VisibilityConverter x:Key="Boolean2VisibilityConverter" />
            <con:Project2IconConverter x:Key="Project2IconConverter" />
            <con:ProjectAutoRunConverter x:Key="ProjectAutoRunConverter" />
            <con:ClickTypeConverter x:Key="ClickTypeConverter" />
            <con:RdpModelConverter x:Key="RdpModelConverter" />
            <con:UrlOpenConverter x:Key="UrlOpenConverter" />
            <con:ProjectCanAutoRunConverter x:Key="ProjectCanAutoRunConverter" />
            <con:ProjectAutoRunToolTipConverter x:Key="ProjectAutoRunToolTipConverter" />
            <con:ProjectWidthConverter x:Key="ProjectWidthConverter" />
            <con:IconSizeConverter x:Key="IconSizeConverter" />
            <con:Orientation2BoolConverter x:Key="Orientation2BoolConverter" />
            <con:Boolean2IsCheckedConverter x:Key="Boolean2IsCheckedConverter" />
            <con:ProjectKind2EnabledConverter x:Key="ProjectKind2EnabledConverter" />
            <con:WeaImgConverter x:Key="WeaImgConverter" />
            <con:WeatherAirConverter x:Key="WeatherAirConverter" />
            <con:WeatherAirColorConverter x:Key="WeatherAirColorConverter" />
            <con:AvatarSizeConverter x:Key="AvatarSizeConverter"/>
            <con:GradientColorConverter x:Key="GradientColorConverter"/>
            <con:IsNull2BoolConverter x:Key="IsNull2BoolConverter"/>
            <!-- 鼠标指针-手样式 -->
            <Style x:Key="CursorHand_Style" TargetType="FrameworkElement">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Cursor" Value="Hand" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- 文本主题样式 -->
            <Style x:Key="TextBlock_ThemeStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{Binding ProjectForeground,Source={x:Static bean:WindowTheme.Instance}}" />
                <Setter Property="FontFamily" Value="{Binding MainFontFamily,Source={x:Static bean:WindowTheme.Instance}}"/>
            </Style>
            <!-- CheckBox主题样式 -->
            <Style x:Key="CheckBox_ThemeStyle" TargetType="CheckBox">
                <Setter Property="Foreground" Value="{Binding ProjectForeground,Source={x:Static bean:WindowTheme.Instance}}" />
                <Setter Property="FontFamily" Value="{Binding MainFontFamily,Source={x:Static bean:WindowTheme.Instance}}"/>
            </Style>
            <!-- 标题按钮Path -->
            <Style TargetType="Path">
                <Setter Property="StrokeThickness" Value="1"/>
                <Setter Property="SnapsToDevicePixels" Value="False"/>
                <Setter Property="UseLayoutRounding" Value="False"/>
            </Style>
            <!-- 标题栏按钮 -->
            <Style x:Key="TitleButton_Style" TargetType="Button">
                <Setter Property="Height" Value="28"/>
                <Setter Property="Width" Value="36"/>
                <Setter Property="Foreground" Value="{Binding ButtonConfirmForeGround,Source={x:Static bean:WindowTheme.Instance}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <!-- 添加模板，用于置Background,否则无效 -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- 最小化按钮样式 -->
            <Style x:Key="MinimumButton_Style" TargetType="Button" BasedOn="{StaticResource TitleButton_Style}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{Binding ButtonConfirmIsMouseOverBackGround,Source={x:Static bean:WindowTheme.Instance}}"/>
                        <Setter Property="Foreground" Value="{Binding ButtonConfirmIsMouseOverForeGround,Source={x:Static bean:WindowTheme.Instance}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- 最大化按钮样式 -->
            <Style x:Key="MaximumButton_Style" TargetType="Button" BasedOn="{StaticResource TitleButton_Style}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{Binding ButtonConfirmIsMouseOverBackGround,Source={x:Static bean:WindowTheme.Instance}}"/>
                        <Setter Property="Foreground" Value="{Binding ButtonConfirmIsMouseOverForeGround,Source={x:Static bean:WindowTheme.Instance}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- 关闭按钮样式 -->
            <Style x:Key="CloseButton_Style" TargetType="Button" BasedOn="{StaticResource TitleButton_Style}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Red"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- 按钮样式-->
            <Style x:Key="Btn_Style" TargetType="{x:Type Button}" BasedOn="{StaticResource CursorHand_Style}">
                <Setter Property="Width" Value="60" />
                <Setter Property="Height" Value="28" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="FontFamily" Value="{Binding MainFontFamily,Source={x:Static bean:WindowTheme.Instance}}"/>
                <!-- 添加模板，用于置Background,否则无效 -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- 菜单样式 -->
            <Style TargetType="MenuItem">
                <Setter Property="Foreground" Value="{Binding ProjectForeground,Source={x:Static bean:WindowTheme.Instance}}" />
                <Setter Property="FontFamily" Value="{Binding MainFontFamily,Source={x:Static bean:WindowTheme.Instance}}"/>
                <Setter Property="FontSize" Value="{Binding MainFontSize,Source={x:Static bean:WindowTheme.Instance}}"/>
            </Style>
            <!-- 确认按钮样式 -->
            <Style x:Key="BtnConfirm_Style" TargetType="{x:Type Button}" BasedOn="{StaticResource Btn_Style}">
                <Setter Property="Background" Value="{Binding ButtonConfirmBackGround, Source={x:Static bean:WindowTheme.Instance}}" />
                <Setter Property="Foreground" Value="{Binding ButtonConfirmForeGround, Source={x:Static bean:WindowTheme.Instance}}" />
                <Setter Property="Content" Value="确认" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{Binding ButtonConfirmIsMouseOverBackGround, Source={x:Static bean:WindowTheme.Instance}}" />
                        <Setter Property="Foreground" Value="{Binding ButtonConfirmIsMouseOverForeGround, Source={x:Static bean:WindowTheme.Instance}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- 取消按钮样式 -->
            <Style x:Key="BtnCancel_Style" TargetType="{x:Type Button}" BasedOn="{StaticResource Btn_Style}">
                <Setter Property="Background" Value="{Binding ButtonCancelBackGround, Source={x:Static bean:WindowTheme.Instance}}" />
                <Setter Property="Foreground" Value="{Binding ButtonCancelForeGround, Source={x:Static bean:WindowTheme.Instance}}" />
                <Setter Property="Content" Value="取消" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{Binding ButtonCancelIsMouseOverBackGround, Source={x:Static bean:WindowTheme.Instance}}" />
                        <Setter Property="Foreground" Value="{Binding ButtonCancelIsMouseOverForeGround, Source={x:Static bean:WindowTheme.Instance}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- 表单标题样式 -->
            <Style x:Key="FormLabel_Style" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Margin" Value="5 5 5 0" />
            </Style>
            <!-- 表单值样式 -->
            <Style x:Key="FormValue_Style" TargetType="Control">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Margin" Value="5 5 5 0" />
            </Style>
            <!-- 表单按钮面板样式 -->
            <Style x:Key="FormButtonPanel_Style" TargetType="StackPanel">
                <Setter Property="Orientation" Value="Horizontal" />
                <Setter Property="HorizontalAlignment" Value="Right" />
            </Style>
            <!-- FontAwesome字体样式 -->
            <Style x:Key="FontAwesome_Style" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource CursorHand_Style}">
                <Style.Setters>
                    <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Margin" Value="4" />
                    <Setter Property="Foreground" Value="DodgerBlue" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                </Style.Setters>
            </Style>
            <!-- FontAwesome名称样式 -->
            <Style x:Key="FontAwesomeName_Style" TargetType="TextBlock">
                <Setter Property="FontSize" Value="10" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="TextWrapping" Value="NoWrap" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            </Style>
            <Style x:Key="RadioButton_Style" TargetType="RadioButton">
                <Setter Property="Margin" Value="5" />
            </Style>
            <Style x:Key="TabItem_Style" TargetType="TabItem">
                <Setter Property="MinWidth" Value="60" />
                <Setter Property="Height" Value="26" />
            </Style>
            <Style x:Key="BottomButtonPanel_RowDefinition_Style" TargetType="RowDefinition">
                <Setter Property="Height" Value="40" />
            </Style>
            <Style x:Key="ColorTextBlock_Style" BasedOn="{StaticResource FormLabel_Style}" TargetType="TextBlock">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="SkyBlue" />
            </Style>
            <Style x:Key="ColorTextBox_Style" BasedOn="{StaticResource FormValue_Style}" TargetType="TextBox">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Text" Value="文字" />
            </Style>
            <Style x:Key="WeatherRegister_Style" BasedOn="{StaticResource FormLabel_Style}" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="Blue" />
                <Setter Property="Margin" Value="6,12,6,6" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>