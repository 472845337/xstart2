<Window x:Class="XStart2._0.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:XStart2._0"
        xmlns:helper="clr-namespace:XStart2._0.Helper"
        mc:Ignorable="d"
        Title="X启动" Height="{Binding MainHeight, Mode=TwoWay}" Width="{Binding MainWidth, Mode=TwoWay}"
        MinHeight="500" MinWidth="300" Left="{Binding MainLeft, Mode=TwoWay}"
        Top="{Binding MainTop, Mode=TwoWay}" Loaded="Window_Loaded"
        Closing="Window_Closing" Closed="Window_Closed" Topmost="{Binding TopMost}" LocationChanged="MainWindow_LocationChanged" Icon="Files/xstart2.ico">
    <!--<b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding MainWindowLoadedCommand}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>-->
    <Window.Resources>
        <Style x:Key="MenuStyleKey" TargetType="MenuItem">
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <!-- 栏目样式 -->
        <Style x:Key="ExpandablePanelStyle" TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" Height="36" Content="{TemplateBinding Header}" Background="LightBlue" DockPanel.Dock="Top" 
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              PreviewMouseLeftButtonDown="Expander_Header_PreviewMouseLeftButtonDown"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Visibility="Hidden"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter TargetName="ExpandSite" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="Expanded" Handler="Expander_Expanded_Handler"/>
        </Style>
        <!-- 项目按钮样式 -->
        <Style x:Key="AppButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <Border.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="添加项目"/>
                                    <MenuItem Header="修改项目"/>
                                    <MenuItem Header="删除项目"/>
                                    <Separator/>
                                    <MenuItem Header="剪切"/>
                                    <MenuItem Header="复制"/>
                                    <MenuItem Header="粘贴"/>
                                </ContextMenu>
                            </Border.ContextMenu>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Padding="3">
                                    <Image Source="{TemplateBinding Tag, Converter={StaticResource Project2IconConverter}}" Stretch="Fill" Margin="2"/>
                                </Border>
                                <TextBlock Grid.Column="1" Text="{TemplateBinding Content}" VerticalAlignment="Center" Margin="5 0 0 0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="AliceBlue"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="BorderBrush" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Cursor" Value=""/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ContextMenu x:Key="TypeTabContextMenu">
            <ContextMenu.Items>
                <MenuItem Name="AddType" Header="添加类别" Click="AddType"/>
                <MenuItem Name="ClearType" Header="清空所有类别" Click="ClearType"/>
            </ContextMenu.Items>
        </ContextMenu>
        <Style x:Key="AddColumnMenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Header" Value="{Binding Path=DisplayText}"/>
            <Setter Property="Command" Value="{Binding Path=AddColumnCommand}"/>
        </Style>
    </Window.Resources>
    <!-- 窗体布局-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="180"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <!-- 个人信息 -->
            <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="5">
                <Border BorderBrush="gray" BorderThickness="1" Height="50" Width="50" CornerRadius="25">
                    <Image Source="{Binding Avatar}" />
                </Border>
                <TextBlock Text="{Binding NickName}" VerticalAlignment="Bottom" Margin="8 0 8 5"/>
            </StackPanel>
            <StackPanel Grid.Column="1">
                <TextBlock Text="{Binding CurrentDay}"/>
                <TextBlock Text="{Binding CurrentTime}"/>
                <TextBlock Text="{Binding CurrentWeekDay}"/>
            </StackPanel>
            <!-- 小工具 -->
            <WrapPanel Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5">
                <Image Source="/Files/Images/Calendar.png" Height="25" Margin="2" Cursor="Hand"/>
                <Image Source="/Files/Images/NotePad.png" Height="25" Margin="2" Cursor="Hand"/>
                <Image Source="/Files/Images/Weather.png" Height="25" Margin="2" Cursor="Hand"/>
            </WrapPanel>
        </Grid>
        <TabControl Grid.Row="1" x:Name="MainTabControl" TabStripPlacement="Left" ItemsSource="{Binding Types}"
                    SizeChanged="MainTabControl_SizeChanged" ContextMenu="{StaticResource TypeTabContextMenu}"
                    SelectionChanged="MainTabControl_SelectionChanged" SelectedIndex="{Binding SelectedIndex}">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <DockPanel LastChildFill="True" Tag="{Binding Value.Section}"  Height="32" 
                               Width="{Binding RelativeSource={RelativeSource AncestorType=local:MainWindow}, Path=DataContext.TypeWidth}"
                               >
                        <DockPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="添加类别" Click="AddType"/>
                                <MenuItem Header="修改类别" Click="UpdateType" IsEnabled="{Binding Value.Unlocked}"/>
                                <MenuItem Header="删除类别" Click="DeleteType" IsEnabled="{Binding Value.Unlocked}"/>
                                <Separator/>
                                <MenuItem Header="添加口令" IsEnabled="{Binding Value.HasPassword, Converter={StaticResource InverseBooleanConverter}}" Click="AddTypeSecurity"/>
                                <MenuItem Header="修改口令" IsEnabled="{Binding Value.HasPassword}" Click="UpdateTypeSecurity"/>
                                <MenuItem Header="移除口令" IsEnabled="{Binding Value.HasPassword}" Click="RemoveTypeSecurity"/>
                                <MenuItem Header="锁定" IsEnabled="{Binding Value.CanLock}" Click="LockType"/>
                                <Separator/>
                                <MenuItem Header="至顶" IsEnabled="{Binding Value.Unlocked}"/>
                                <MenuItem Header="上移" IsEnabled="{Binding Value.Unlocked}"/>
                                <MenuItem Header="下移" IsEnabled="{Binding Value.Unlocked}"/>
                                <MenuItem Header="至底" IsEnabled="{Binding Value.Unlocked}"/>
                                <Separator/>
                                <MenuItem Header="清空栏目" IsEnabled="{Binding Value.Unlocked}"/>
                            </ContextMenu>
                        </DockPanel.ContextMenu>
                        <TextBlock DockPanel.Dock="Left" Width="28" Text="{Binding Value.FaIcon}" FontFamily="{Binding Value.FaIconFontFamily}" Foreground="{Binding Value.FaIconColor}" FontSize="18" Padding="5"/>
                        <TextBlock DockPanel.Dock="Right" VerticalAlignment="Center" Text="{Binding Value.Name}" FontSize="18" Padding="5"/>
                    </DockPanel>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <Grid>
                        <StackPanel Visibility="{Binding Value.Locked, Converter={StaticResource Boolean2VisibilityConverter}}" Tag="{Binding Value.Section}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="60"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="口令:" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5"/>
                                <PasswordBox PasswordChar="*" Grid.Row="0" Grid.Column="1" helper:PasswordBoxHelper.Attach ="True" helper:PasswordBoxHelper.Password="{Binding Value.UnlockSecurity,Mode=TwoWay}" FontSize="14" Height="30" VerticalContentAlignment="Center" Margin="5"/>
                                <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
                                    <CheckBox Content="记住口令" IsChecked="{Binding Value.RememberSecurity}" Margin="5" VerticalAlignment="Center"/>
                                    <Button Style="{StaticResource Btn_Style}" Content="确定" Click="UnlockType" Tag="{Binding Value.Section}"/>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                        <ScrollViewer Visibility="{Binding Value.Unlocked, Converter={StaticResource Boolean2VisibilityConverter}}" VerticalScrollBarVisibility="{Binding Value.VerticalScroll}" Tag="{Binding Value.Section}">
                            <ScrollViewer.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="添加栏目" Click="AddColumn"/>
                                </ContextMenu>
                            </ScrollViewer.ContextMenu>
                            <ItemsControl ItemsSource="{Binding Value.ColumnDic}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Expander helper:ElementParamHelper.TypeSection="{Binding Value.TypeSection}" helper:ElementParamHelper.ColumnSection="{Binding Value.Section}"
                                          Header="{Binding Value.Name}" IsExpanded="{Binding Value.IsExpanded}" Style="{StaticResource ExpandablePanelStyle}" BorderBrush="Transparent">
                                            <Expander.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="添加栏目" Click="AddColumn"/>
                                                    <MenuItem Header="修改栏目" Click="UpdateColumn"/>
                                                    <MenuItem Header="删除栏目" Click="DeleteColumn"/>
                                                    <Separator/>
                                                    <MenuItem Header="添加口令" IsEnabled="{Binding Value.HasPassword, Converter={StaticResource InverseBooleanConverter}}" Click="AddColumnSecurity"/>
                                                    <MenuItem Header="修改口令" IsEnabled="{Binding Value.HasPassword}" Click="UpdateColumnSecurity"/>
                                                    <MenuItem Header="移除口令" IsEnabled="{Binding Value.HasPassword}" Click="RemoveColumnSecurity"/>
                                                    <MenuItem Header="锁定" IsEnabled="{Binding Value.CanLock}" Click="LockColumn"/>
                                                </ContextMenu>
                                            </Expander.ContextMenu>
                                            <Grid>
                                                <StackPanel Visibility="{Binding Value.Locked, Converter={StaticResource Boolean2VisibilityConverter}}" Tag="{Binding Value.Section}" Height="{Binding Value.ColumnHeight}">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="60"/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="口令:" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5"/>
                                                        <PasswordBox PasswordChar="*" Grid.Row="0" Grid.Column="1" helper:PasswordBoxHelper.Attach ="True" helper:PasswordBoxHelper.Password="{Binding Value.UnlockSecurity,Mode=TwoWay}" FontSize="14" Height="30" VerticalContentAlignment="Center" Margin="5"/>
                                                        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
                                                            <CheckBox Content="记住口令" IsChecked="{Binding Value.RememberSecurity}" Margin="5" VerticalAlignment="Center"/>
                                                            <Button Style="{StaticResource Btn_Style}" Content="确定" Click="UnlockColumn"
                                                                    helper:ElementParamHelper.TypeSection="{Binding Value.TypeSection}" helper:ElementParamHelper.ColumnSection="{Binding Value.Section}"/>
                                                        </StackPanel>
                                                    </Grid>
                                                </StackPanel>
                                                <ScrollViewer Visibility="{Binding Value.Unlocked, Converter={StaticResource Boolean2VisibilityConverter}}" VerticalScrollBarVisibility="Auto" Height="{Binding Value.ColumnHeight}" ScrollChanged="ScrollChanged" Tag="{Binding Value}">
                                                    <ScrollViewer.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="添加项目"/>
                                                            <MenuItem Header="粘贴"/>
                                                            <MenuItem Header="清空本栏目"/>
                                                        </ContextMenu>
                                                    </ScrollViewer.ContextMenu>
                                                    <ItemsControl ItemsSource="{Binding Value.ProjectDic}">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <WrapPanel ItemWidth="{Binding Value.ProjectWidth}"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition/>
                                                                        <ColumnDefinition Width="24"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Button Grid.Column="0" Content="{Binding Value.Name}" Style="{StaticResource AppButton}"
                                                                        ToolTip="{Binding Value.ToolTipContent}" Tag="{Binding Value}"
                                                                        Click="ProjectButton_Click" MouseDoubleClick="ProjectButton_DoubleClick"/>
                                                                    <ToggleButton Grid.Column="1" Style="{StaticResource GlassToggleButton}" Height="20" Margin="2" Background="Green" Tag="{TemplateBinding Tag}"
                                                                    IsChecked="{Binding Value.AutoRun, Converter={StaticResource ProjectAutoRunConverter}}" IsEnabled="{Binding Value.CanAutoRun}" ToolTip="{Binding Value.CanAutoRun, Converter={StaticResource ProjectAutoRunToolTipConverter}}" Click="ToggleAutoRun_Click" ToolTipService.ShowOnDisabled="True"/>
                                                                </Grid>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                </ScrollViewer>
                                            </Grid>
                                        </Expander>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </Grid>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <Menu DockPanel.Dock="Left">
                    <MenuItem>
                        <MenuItem.Header>
                            <TextBlock Text="{Binding TypeTabToggleIcon}" Foreground="BlueViolet" FontFamily="{StaticResource FontAwesomeSolid}" FontSize="16" ToolTip="类别名称显示切换" MouseLeftButtonUp="ToggleTabItem"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Header="菜单">
                        <MenuItem IsCheckable="True" IsChecked="{Binding TopMost}" Header="置顶" Style="{StaticResource MenuStyleKey}"/>
                        <MenuItem IsCheckable="True" IsChecked="{Binding Audio}" Header="音效" Style="{StaticResource MenuStyleKey}"/>
                        <MenuItem IsCheckable="True" IsChecked="{Binding CloseBorderHide}" Header="靠边隐藏" Style="{StaticResource MenuStyleKey}" Click="CloseBorderHide_Click"/>
                        <MenuItem IsCheckable="True" IsChecked="{Binding AutoRun}" Header="开机启动" Style="{StaticResource MenuStyleKey}"/>
                        <MenuItem IsCheckable="True" IsChecked="{Binding ExitWarn}" Header="退出提醒" Style="{StaticResource MenuStyleKey}"/>
                        <Separator/>
                        <MenuItem Header="选项" Click="Open_Setting">
                            <MenuItem.Icon>
                                <Image Source="/Files/Images/Setting.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="取消所有自启动"/>
                        <MenuItem Header="恢复默认" />
                        <MenuItem Header="关于" Click="ShowAbout"/>
                        <MenuItem Header="退出程序" Click="Window_Close"/>
                    </MenuItem>
                    <MenuItem Header="关于" Click="ShowAbout"/>
                </Menu>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
