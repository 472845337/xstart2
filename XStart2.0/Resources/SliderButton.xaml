<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:XStart2._0.View"
                    xmlns:localbean="clr-namespace:XStart2._0.Bean">
    
    <!-- SliderButtons 使用时 引入该字典xaml 
    <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources\SliderButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    在<Window>中引用SliderButton类的包名 xmlns:view="clr-namespace:包名"
    使用示例：
    <view:SliderButton Grid.Row="3" Grid.Column="1" OnLabel="是" OffLabel="否" Width="65" ButtonWidth="25" Style="{StaticResource SliderButton_Style}" HorizontalAlignment="Center"/>
    Style:SliderButton_Style          这个是圆角的
    Style:SliderButtonRectangular_Style 这个是长方形的
    -->
    <Style x:Key="EllipseButton_Style" TargetType="{x:Type Ellipse}">
        <Setter Property="Stroke" Value="Gray"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="EllipseGreyButton_Style" TargetType="{x:Type Ellipse}" BasedOn="{StaticResource EllipseButton_Style}">
        <Setter Property="Fill">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                    <GradientStop Color="#FFFFFF" Offset="0"/>
                    <GradientStop Color="#BBBBBB" Offset="0.567"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderButtonLabel_Style" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style x:Key="SliderButtonSideLabel_Style" TargetType="{x:Type local:SliderButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SliderButton}">
                    <Grid x:Name="mainGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="2" Name="_borderOn" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="2" Width="{TemplateBinding ButtonWidth}" Height="{TemplateBinding ButtonWidth}"  Style="{StaticResource EllipseGreyButton_Style}" Panel.ZIndex="3" />
                            <Border Grid.Row="0" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3" Background="ForestGreen" BorderBrush="Gray" BorderThickness="0,1,0,1" Panel.ZIndex="1"/>
                            <Ellipse Grid.Row="0" Grid.RowSpan="1" Grid.Column="3" Grid.ColumnSpan="2" Width="{TemplateBinding ButtonWidth}" Height="{TemplateBinding ButtonWidth}" Style="{StaticResource EllipseButton_Style}" Fill="ForestGreen" Panel.ZIndex="0"/>
                        </Grid>
                        <Label Grid.Row="0" Grid.Column="0" Name="_labelOn" Content="{TemplateBinding OnLabel}" Style="{StaticResource SliderButtonLabel_Style}" Foreground="Black"/>

                        <Grid Grid.Column="2" Name="_borderOff" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="2" Width="{TemplateBinding ButtonWidth}" Height="{TemplateBinding ButtonWidth}"  VerticalAlignment="Stretch" Fill="Crimson" Stroke="Gray" Panel.ZIndex="0"/>
                            <Border Grid.Row="0" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3" Background="Crimson" BorderBrush="Gray" BorderThickness="0,1,0,1" Panel.ZIndex="1"/>
                            <Ellipse Grid.Row="0" Grid.RowSpan="1" Grid.Column="3" Grid.ColumnSpan="2" Width="{TemplateBinding ButtonWidth}" Height="{TemplateBinding ButtonWidth}"  Style="{StaticResource EllipseGreyButton_Style}" Panel.ZIndex="3"/>
                        </Grid>
                        <Label Grid.Row="0" Grid.Column="0" Name="_labelOff" Content="{TemplateBinding OffLabel}" Style="{StaticResource SliderButtonLabel_Style}" Foreground="Black"/>
                    </Grid>

                    <!-- triggers toggle visual appearance -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="_labelOff" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="_borderOff" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="_labelOn" Property="Visibility" Value="Visible" />
                            <Setter TargetName="_borderOn" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="_labelOff" Property="Visibility" Value="Visible" />
                            <Setter TargetName="_borderOff" Property="Visibility" Value="Visible" />
                            <Setter TargetName="_labelOn" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="_borderOn" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    
    <Style x:Key="SliderButton_Style" TargetType="{x:Type local:SliderButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SliderButton}">
                    <Grid x:Name="mainGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Name="_borderOn" Background="Transparent" Width="{TemplateBinding Width}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="2" Width="{TemplateBinding ButtonWidth}" Height="{TemplateBinding ButtonWidth}"  Style="{StaticResource EllipseGreyButton_Style}" Panel.ZIndex="3" />
                            <Border Grid.Row="0" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3" Background="ForestGreen" BorderBrush="Gray" BorderThickness="0,1,0,1" Panel.ZIndex="1"/>
                            <Label Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="3" Name="_labelOn" Content="{TemplateBinding OnLabel}" Style="{StaticResource SliderButtonLabel_Style}" Panel.ZIndex="2"/>
                            <Ellipse Grid.Row="0" Grid.RowSpan="1" Grid.Column="3" Grid.ColumnSpan="2" Width="{TemplateBinding ButtonWidth}" Height="{TemplateBinding ButtonWidth}" Style="{StaticResource EllipseButton_Style}" Fill="ForestGreen" Panel.ZIndex="0"/>
                        </Grid>

                        <Grid Grid.Column="0" Name="_borderOff" Background="Transparent" Width="{TemplateBinding Width}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="2" Width="{TemplateBinding ButtonWidth}" Height="{TemplateBinding ButtonWidth}"  VerticalAlignment="Stretch" Fill="Crimson" Stroke="Gray" Panel.ZIndex="0"/>
                            <Label Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="3" Name="_labelOff" Content="{TemplateBinding OffLabel}" Style="{StaticResource SliderButtonLabel_Style}" Panel.ZIndex="2"/>
                            <Border Grid.Row="0" Grid.RowSpan="1" Grid.Column="1" Grid.ColumnSpan="3" Background="Crimson" BorderBrush="Gray" BorderThickness="0,1,0,1" Panel.ZIndex="1"/>
                            <Ellipse Grid.Row="0" Grid.RowSpan="1" Grid.Column="3" Grid.ColumnSpan="2" Width="{TemplateBinding ButtonWidth}" Height="{TemplateBinding ButtonWidth}"  Style="{StaticResource EllipseGreyButton_Style}" Panel.ZIndex="3"/>
                        </Grid>
                </Grid>

                    <!-- triggers toggle visual appearance -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="_borderOff" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="_borderOn" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="_borderOff" Property="Visibility" Value="Visible" />
                            <Setter TargetName="_borderOn" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderGreyButton_Style" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                    <GradientStop Color="#FFFFFF" Offset="0"/>
                    <GradientStop Color="#BBBBBB" Offset="0.567"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="SliderButtonRectangular_Style" TargetType="{x:Type local:SliderButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SliderButton}">
                    <Grid x:Name="mainGrid" Background="Transparent" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Name="_borderOn" Background="ForestGreen" CornerRadius="0" BorderBrush="Gray" BorderThickness="1" VerticalAlignment="Stretch">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Row="0" Grid.Column="0" CornerRadius="0" Style="{StaticResource BorderGreyButton_Style}"/>
                                <Label Grid.Row="1" Grid.Column="1" Name="_labelOn" Content="{TemplateBinding OnLabel}" Style="{StaticResource SliderButtonLabel_Style}" />
                            </Grid>
                        </Border>

                        <Border Grid.Column="0" Name="_borderOff" Background="Crimson" CornerRadius="0" BorderBrush="Gray" BorderThickness="1" VerticalAlignment="Stretch">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Row="0" Grid.Column="0" Name="_labelOff" Content="{TemplateBinding OffLabel}" Style="{StaticResource SliderButtonLabel_Style}" />
                                <Border Grid.Row="0" Grid.Column="1" CornerRadius="0" Style="{StaticResource BorderGreyButton_Style}"/>
                            </Grid>
                        </Border>
                    </Grid>

                    <!-- triggers toggle visual appearance -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="_borderOff" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="_borderOn" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="_borderOff" Property="Visibility" Value="Visible" />
                            <Setter TargetName="_borderOn" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--- SliderButton end -->    
    
    <!-- SwitchButton -->
    <Style x:Key="SwitchButton_Style" TargetType="{x:Type ToggleButton}">
        <Setter Property="Tag" Value="{DynamicResource {x:Static SystemParameters.HighContrastKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecked">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                                                  Storyboard.TargetName="path">
                                <EasingThicknessKeyFrame KeyTime="0" Value="40,0,0,0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecked">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                                                  Storyboard.TargetName="path">
                                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="toggleBorder"
                                CornerRadius="13"
                                Background="Green"
                                Width="{TemplateBinding Width}"
                                Height="26"
                                BorderThickness="1"
                                BorderBrush="Black">
                        <Grid>
                            <Path x:Name="path">
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="White"/>
                                    </LinearGradientBrush>
                                </Path.Fill>
                                <Path.Data>
                                    <GeometryGroup>
                                        <GeometryGroup.Children>
                                            <EllipseGeometry Center="6,12" RadiusX="9" RadiusY="9"/>
                                        </GeometryGroup.Children>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard Storyboard="{StaticResource OnChecked}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard Storyboard="{StaticResource OnUnchecked}"/>
                        </EventTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter TargetName="toggleBorder" Property="Background" Value="Green"/>
                            <Setter TargetName="toggleBorder" Property="BorderBrush" Value="LightGray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="toggleBorder" Property="Background" Value="LightGray"/>
                            <Setter TargetName="path" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="Gray"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="path" Property="Data">
                                <Setter.Value>
                                    <GeometryGroup>
                                        <GeometryGroup.Children>
                                            <EllipseGeometry Center="13,12" RadiusX="9" RadiusY="9"/>
                                        </GeometryGroup.Children>
                                    </GeometryGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <!-- High Contrast -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsHighContrastWhite, Source={x:Static localbean:HighContrastHelper.Instance}}" Value="true" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="true"/>
                                <Condition Binding="{Binding ElementName=toggleButton, Path=IsChecked}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="toggleBorder" Property="Background" Value="Blue"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsHighContrastWhite, Source={x:Static localbean:HighContrastHelper.Instance}}" Value="true" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="true"/>
                                <Condition Binding="{Binding ElementName=toggleButton, Path=IsChecked}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="toggleBorder" Property="Background" Value="Black"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsHighContrastBlack, Source={x:Static localbean:HighContrastHelper.Instance}}" Value="true" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="true"/>
                                <Condition Binding="{Binding ElementName=toggleButton, Path=IsChecked}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="toggleBorder" Property="Background" Value="Aqua"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsHighContrastBlack, Source={x:Static localbean:HighContrastHelper.Instance}}" Value="true" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="true"/>
                                <Condition Binding="{Binding ElementName=toggleButton, Path=IsChecked}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="toggleBorder" Property="Background" Value="Yellow"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- SwitchButton end -->
</ResourceDictionary>